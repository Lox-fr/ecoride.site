{
    "name": "lox/ecoride.site",
    "description": "Eco-responsible carpooling application developed with Symfony",
    "type": "project",
    "license": "proprietary",
    "minimum-stability": "stable",
    "prefer-stable": true,
    "replace": {
        "symfony/polyfill-ctype": "*",
        "symfony/polyfill-iconv": "*",
        "symfony/polyfill-php72": "*",
        "symfony/polyfill-php73": "*",
        "symfony/polyfill-php74": "*",
        "symfony/polyfill-php80": "*",
        "symfony/polyfill-php81": "*"
    },
    "require": {
        "php": ">=8.1",
        "ext-ctype": "*",
        "ext-iconv": "*",
        "doctrine/dbal": "^3",
        "doctrine/doctrine-bundle": "^2.13",
        "doctrine/doctrine-migrations-bundle": "^3.3",
        "doctrine/mongodb-odm-bundle": "^5.0",
        "doctrine/orm": "^3.3",
        "phpdocumentor/reflection-docblock": "^5.4",
        "phpstan/phpdoc-parser": "^1.33",
        "symfony/asset": "6.4.*",
        "symfony/console": "6.4.*",
        "symfony/doctrine-messenger": "6.4.*",
        "symfony/dotenv": "6.4.*",
        "symfony/expression-language": "6.4.*",
        "symfony/flex": "^2",
        "symfony/form": "6.4.*",
        "symfony/framework-bundle": "6.4.*",
        "symfony/http-client": "6.4.*",
        "symfony/intl": "6.4.*",
        "symfony/mailer": "6.4.*",
        "symfony/mime": "6.4.*",
        "symfony/monolog-bundle": "^3.0",
        "symfony/notifier": "6.4.*",
        "symfony/process": "6.4.*",
        "symfony/property-access": "6.4.*",
        "symfony/property-info": "6.4.*",
        "symfony/rate-limiter": "6.4.*",
        "symfony/runtime": "6.4.*",
        "symfony/security-bundle": "6.4.*",
        "symfony/serializer": "6.4.*",
        "symfony/stimulus-bundle": "^2.21",
        "symfony/string": "6.4.*",
        "symfony/translation": "6.4.*",
        "symfony/twig-bundle": "6.4.*",
        "symfony/ux-chartjs": "^2.21",
        "symfony/ux-icons": "^2.21",
        "symfony/ux-turbo": "^2.21",
        "symfony/validator": "6.4.*",
        "symfony/web-link": "6.4.*",
        "symfony/webpack-encore-bundle": "^2.2",
        "symfony/yaml": "6.4.*",
        "symfonycasts/reset-password-bundle": "^1.23",
        "twig/extra-bundle": "^2.12|^3.0",
        "twig/twig": "^2.12|^3.0"
    },
    "require-dev": {
        "doctrine/doctrine-fixtures-bundle": "^3.6",
        "fakerphp/faker": "^1.24",
        "friendsofphp/php-cs-fixer": "^3.64",
        "phpstan/extension-installer": "^1.4",
        "phpstan/phpstan": "^1.12",
        "phpstan/phpstan-doctrine": "^1.5",
        "phpstan/phpstan-symfony": "^1.4",
        "phpunit/phpunit": "^9.5",
        "symfony/browser-kit": "6.4.*",
        "symfony/css-selector": "6.4.*",
        "symfony/debug-bundle": "6.4.*",
        "symfony/maker-bundle": "^1.0",
        "symfony/phpunit-bridge": "^7.1",
        "symfony/stopwatch": "6.4.*",
        "symfony/web-profiler-bundle": "6.4.*"
    },
    "config": {
        "allow-plugins": {
            "php-http/discovery": true,
            "phpstan/extension-installer": true,
            "symfony/flex": true,
            "symfony/runtime": true
        },
        "sort-packages": true
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Tests\\": "tests/"
        }
    },
    "conflict": {
        "symfony/symfony": "*"
    },
    "extra": {
        "symfony": {
            "allow-contrib": false,
            "require": "6.4.*"
        }
    },
    "scripts": {
        "auto-scripts": {
            "cache:clear": "symfony-cmd",
            "assets:install %PUBLIC_DIR%": "symfony-cmd"
        },
        "post-install-cmd": [
            "@auto-scripts"
        ],
        "post-update-cmd": [
            "@auto-scripts"
        ],
        "dbPrepare": [
            "php bin/console app:database:delete --no-interaction",
            "php bin/console app:database:create",
            "@tableCreations",
            "@fixturesLoading"
        ],
        "tableCreations": [
            "php bin/console app:database:execute create/table/brand",
            "php bin/console app:database:execute create/table/car",
            "php bin/console app:database:execute create/table/color",
            "php bin/console app:database:execute create/table/engineType",
            "php bin/console app:database:execute create/table/messengerMessages",
            "php bin/console app:database:execute create/table/preference",
            "php bin/console app:database:execute create/table/role",
            "php bin/console app:database:execute create/table/user",
            "php bin/console app:database:execute create/table/userRole",
            "php bin/console app:database:execute create/table/resetPasswordRequest",
            "php bin/console app:database:execute create/constraints/car",
            "php bin/console app:database:execute create/constraints/preference",
            "php bin/console app:database:execute create/constraints/userRole"
        ],
        "fixturesLoading": [
            "php bin/console app:database:execute create/fixtures/brands",
            "php bin/console app:database:execute create/fixtures/colors",
            "php bin/console app:database:execute create/fixtures/engineTypes",
            "php bin/console app:database:execute create/fixtures/roles",
            "php bin/console app:database:execute create/fixtures/users",
            "php bin/console app:database:execute create/fixtures/cars",
            "php bin/console app:database:execute create/fixtures/preferences",
            "php bin/console app:database:execute create/fixtures/userRoles"
        ],
        "testDbPrepare": [
            "php bin/console app:database:delete --no-interaction --env=test",
            "php bin/console app:database:create --env=test",
            "@testTableCreations",
            "@testFixturesLoading"
        ],
        "testTableCreations": [
            "php bin/console app:database:execute create/table/brand --env=test",
            "php bin/console app:database:execute create/table/car --env=test",
            "php bin/console app:database:execute create/table/color --env=test",
            "php bin/console app:database:execute create/table/engineType --env=test",
            "php bin/console app:database:execute create/table/messengerMessages --env=test",
            "php bin/console app:database:execute create/table/preference --env=test",
            "php bin/console app:database:execute create/table/role --env=test",
            "php bin/console app:database:execute create/table/user --env=test",
            "php bin/console app:database:execute create/table/userRole --env=test",
            "php bin/console app:database:execute create/constraints/car --env=test",
            "php bin/console app:database:execute create/constraints/preference --env=test",
            "php bin/console app:database:execute create/constraints/userRole --env=test"
        ],
        "testFixturesLoading": [
            "php bin/console app:database:execute create/fixtures/brands --env=test",
            "php bin/console app:database:execute create/fixtures/colors --env=test",
            "php bin/console app:database:execute create/fixtures/engineTypes --env=test",
            "php bin/console app:database:execute create/fixtures/roles --env=test",
            "php bin/console app:database:execute create/fixtures/users --env=test",
            "php bin/console app:database:execute create/fixtures/cars --env=test",
            "php bin/console app:database:execute create/fixtures/preferences --env=test",
            "php bin/console app:database:execute create/fixtures/userRoles --env=test"
        ],
        "lint": [
            "php bin/console lint:twig templates",
            "php bin/console lint:yaml config --parse-tags",
            "php bin/console lint:container"
        ],
        "phpFix": "php vendor/bin/php-cs-fixer fix --allow-risky=yes",
        "phpStan": "php vendor/bin/phpstan analyze",
        "phpUnit": [
            "@testDbPrepare",
            "php vendor/bin/phpunit --testdox --coverage-html tests/CoverageReport"
        ],
        "test": [
            "composer validate --strict",
            "@lint",
            "@phpStan",
            "@phpUnit"
        ]
    }
}
